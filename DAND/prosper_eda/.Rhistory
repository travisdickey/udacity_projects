clarity_bar <- ggplot(aes(x = clarity, y = as.numeric(mean_price)),
data = diamonds_mp_by_clarity) +
geom_bar()
color_bar <- ggplot(aes(x = color, y = as.numeric(mean_price)),
data = diamonds_mp_by_color) +
geom_bar()
grid.arrange(clarity_bar, color_bar)
color_bar <- ggplot(aes(x = color, y = mean_price),
data = diamonds_mp_by_color) +
geom_bar(stat = "identity")
clarity_bar <- ggplot(aes(x = clarity, y = mean_price),
data = diamonds_mp_by_clarity) +
geom_bar(stat = "identity")
grid.arrange(clarity_bar, color_bar)
?diamonds
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
library(ggplot2)
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
pf <- read.csv('C:/Users/tdickey/Documents/Udacity/DAND/EDA/lesson3/pseudo_facebook.tsv', sep = '\t')
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
View(pf)
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_boxplot()
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_bar()
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_boxplot()
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_boxplot() +
stat_summary(fun.y = mean, geom_point = "point", shape = 4)
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_boxplot() +
stat_summary(fun.y = mean, geom = "point", shape = 4)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(gender))) +
geom_line(aes(color = gender), stat = 'summary', fun.y = median)
library(dplyr)
pf.fc_by_age_gender <- pf %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
arrange(age)
head(pf.fc_by_age_gender)
head(pf.fc_by_age_gender, -6)
?head
tail(pf.fc_by_age_gender)
pf.fc_by_age_gender <- pf %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(as.numeric(friend_count)),
n = n()) %>%
arrange(age)
head(pf.fc_by_age_gender)
tail(pf.fc_by_age_gender)
head(pf.fc_by_age_gender)
pf.fc_by_age_gender <- pf %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(as.numeric(friend_count)),
n = n()) %>%
ungroup() %>%
arrange(age)
head(pf.fc_by_age_gender)
tail(pf.fc_by_age_gender)
pf.fc_by_age_gender <- pf %>%
group_by(age, gender) %>%
filter(!is.na(gender)) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(as.numeric(friend_count)),
n = n()) %>%
ungroup() %>%
arrange(age)
ggplot(aes(x = age, y = friend_count),
data = pf.fc_by_age_gender) +
geom_line(aes(color = gender))
ggplot(aes(x = age, y = median_friend_count),
data = pf.fc_by_age_gender) +
geom_line(aes(color = gender))
install.packages('reshape2')
library(reshape2)
pf.fc_by_age_gender.wide <- dcast(pf.fc_by_age_gender,
age ~ gender,
value.var = 'median_friend_count')
View(pf.fc_by_age_gender.wide)
head(pf.fc_by_age_gender.wide)
ggplot(aes(x = age, y = female / male),
data = pf.fc_by_age_gender.wide) +
geom_line()
?geom_hline
ggplot(aes(x = age, y = female / male),
data = pf.fc_by_age_gender.wide) +
geom_line() +
geom_hline(yintercept = 1)
?geom_hline
ggplot(aes(x = age, y = female / male),
data = pf.fc_by_age_gender.wide) +
geom_line() +
geom_hline(aes(yintercept = 1, linetype = 2))
ggplot(aes(x = age, y = female / male),
data = pf.fc_by_age_gender.wide) +
geom_line() +
geom_hline(yintercept = 1, linetype = 2)
ggplot(aes(x = age, y = female / male, color = blue),
data = pf.fc_by_age_gender.wide) +
geom_line() +
geom_hline(yintercept = 1, linetype = 2)
ggplot(aes(x = age, y = female / male, color = 'blue'),
data = pf.fc_by_age_gender.wide) +
geom_line() +
geom_hline(yintercept = 1, linetype = 2)
ggplot(aes(x = age, y = female / male, color = 'red'),
data = pf.fc_by_age_gender.wide) +
geom_line() +
geom_hline(yintercept = 1, linetype = 2)
ggplot(aes(x = age, y = female / male),
data = pf.fc_by_age_gender.wide) +
geom_line() +
geom_hline(yintercept = 1, linetype = 2)
ggplot(aes(x = age, y = female / male),
data = pf.fc_by_age_gender.wide) +
geom_line() +
geom_hline(yintercept = 1, alpha = 0.3, linetype = 2)
names(pf)
head(pf$tenure)
head(pf)
pf$year_joined <- pf$tenure + 2014
head(pf)
pf$year_joined <- 2014 - pf$tenure
head(pf)
?pf
pf$year_joined <- 2014 - (pf$tenure / 365)
pf$year_joined <- 2014 - floor(pf$tenure / 365)
pf$year_joined <- 2014 - floor(pf$tenure / 365)
?pf
library(ggplot2)
pf <- read.csv('C:/Users/tdickey/Documents/Udacity/DAND/EDA/lesson3/pseudo_facebook.tsv', sep = '\t')
pf$year_joined <- 2014 - floor(pf$tenure / 365)
?pf
?pf
?cut
cut(rep(1,5), 4) #-- dummy
tx0 <- c(9, 4, 6, 5, 3, 10, 5, 3, 5)
x <- rep(0:8, tx0)
stopifnot(table(x) == tx0)
cut(rep(1,5), 4) #-- dummy
tx0 <- c(9, 4, 6, 5, 3, 10, 5, 3, 5)
tx0
x <- rep(0:8, tx0)
x
x <- c(2005-2009, 2011-2012)
x
x <- c(c(2005, 2009), c(2011,2012))
x <- c(seq(2005, 2009), seq(2011,2012))
x <- c((seq(2005, 2009)), (seq(2011,2012)))
x
library(ggplot2)
library(ggplot2)
ggplot(aes(x = tenure, y = prop_initiated), data = pf) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
View(pf)
pf$year_joined.bucket <- cut(pf$year_joined, breaks = c(2004, 2009, 2011, 2012, 2014))
ggplot(aes(x = tenure, y = prop_initiated), data = pf) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
pf$prop_initiated <- ifelse(is.na(pf$friendships_initiated / pf$friend_count), 0, (pf$friendships_initiated / pf$friend_count))
ggplot(aes(x = tenure, y = prop_initiated), data = pf) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
ggplot(aes(x = tenure, y = prop_initiated), data = pf) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median) +
geom_smooth()
ggplot(aes(x = tenure, y = prop_initiated), data = pf) +
geom_smooth(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
ggplot(aes(x = tenure, y = prop_initiated), data = pf) +
geom_smooth(aes(color = year_joined.bucket))
ggplot(aes(x = 7 * round(tenure / 7), y = prop_initiated), data = pf) +
geom_smooth(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
ggplot(aes(x = 7 * round(tenure / 7), y = prop_initiated), data = pf) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
ggplot(aes(x = 30 * round(tenure / 30), y = prop_initiated), data = pf) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
with(subset(pf, tenure >= 1), summary(friend_count / tenure))
View(pf)
with(subset(pf, year_joined.bucket == c(2012,2014)), summary(year_joined.bucket))
with(subset(pf, year_joined.bucket == c(2012,2014)), summary())
with(subset(pf, year_joined.bucket == c(2012,2014)), summary(prop_initiated))
with(subset(pf, year_joined.bucket == (2012-2014), summary(prop_initiated)))
with(subset(pf, year_joined.bucket == (2012,2014], summary(prop_initiated)))
```
table(pf$year_joined.bucket, useNA = 'ifany')
table(pf$year_joined.bucket, useNA = 'ifany')
with(subset(pf, year_joined.bucket == (2012-2014), summary(prop_initiated)))
with(subset(pf, year_joined.bucket, summary(prop_initiated)))
with(subset(pf, year_joined.bucket > 2011, summary(prop_initiated)))
with(subset(pf, year_joined.bucket == c(2012, 2014), summary(prop_initiated)))
with(subset(pf, year_joined.bucket == c((2012, 2014]), summary(prop_initiated)))
```
with(subset(pf, levels(year_joined.bucket) == "(2012,2014]", summary(prop_initiated)))
pf$year_joined.bucket[1:20]
levels(pf$year_joined.bucket[1:20])
table(pf$year_joined.bucket)
pf2 <- subset(pf, levels(year_joined.bucket) == "(2012,2014]")
pf2$year_joined.bucket[1:20]
table(pf2$year_joined.bucket)
nrow(pf2) / nrow(pf)
with(subset(pf, year_joined.bucket == "(2012,2014]", summary(prop_initiated)))
group1 <- subset(pf, year_joined.bucket == '(2012, 2014]')
summary(group1$prop_initiated)
View(group1)
pf$prop_initiated <- ifelse(is.na(pf$friendships_initiated / pf$friend_count), 0, (pf$friendships_initiated / pf$friend_count))
group1 <- subset(pf, year_joined.bucket == '(2012, 2014]')
group1 <- subset(pf, year_joined.bucket == '(2012, 2014]')
with(subset(pf, year_joined.bucket == "(2012,2014]", summary(prop_initiated)))
library(ggplot2)
View(pf)
pf$year_joined.bucket <- cut(pf$year_joined, breaks = c(2004, 2009, 2011, 2012, 2014))
table(pf$year_joined.bucket, useNA = 'ifany')
group1 <- subset(pf, year_joined.bucket == '(2012, 2014]')
summary(group1$prop_initiated)
group1 <- subset(pf, year_joined.bucket == '(2012,2014]')
summary(group1$prop_initiated)
View(group1)
pf$prop_initiated <- ifelse(is.na(pf$friendships_initiated / pf$friend_count), 0, (pf$friendships_initiated / pf$friend_count))
group1 <- subset(pf, year_joined.bucket == '(2012,2014]')
summary(group1$prop_initiated)
with(subset(pf, year_joined.bucket == "(2012,2014]", summary(prop_initiated)))
with(subset(pf, year_joined.bucket == "(2012,2014]"), summary(prop_initiated))
ggplot(aes(x = cut, y = price / carat), data = pf) +
geom_point(aes(color = color)) +
facet_wrap(~ clarity)
library(ggplot2)
ggplot(aes(x = cut, y = price / carat), data = pf) +
geom_point(aes(color = color)) +
facet_wrap(~ clarity)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(aes(color = cut)) +
facet_wrap(~ color) +
scale_x_log10() +
scale_fill_brewer(type = 'qual')
library(ggplot2)
ggplot(aes(x = cut, y = price / carat), data = pf) +
geom_point(aes(color = color)) +
facet_wrap(~ clarity)
names(diamonds)
ggplot(aes(x = cut, y = price / carat), data = diamonds) +
geom_point(aes(color = color)) +
facet_wrap(~ clarity)
ggplot(aes(x = cut, y = price / carat), data = diamonds) +
geom_point(aes(color = color)) +
facet_wrap(~ clarity) +
scale_color_brewer(type = 'div')
ggplot(aes(x = cut, y = price / carat), data = diamonds, binwidth = 1) +
geom_point(aes(color = color)) +
facet_wrap(~ clarity) +
scale_color_brewer(type = 'div')
ggplot(aes(x = cut, y = price / carat), data = diamonds) +
geom_jitter(aes(color = color)) +
facet_wrap(~ clarity) +
scale_color_brewer(type = 'div')
library('ggplot2')
data(diamonds)
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point() +
xlim(0, quantile(diamonds$carat, 0.99)) +
ylim(0, quantile(diamonds$price, 0.99))
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point() +
xlim(0, quantile(diamonds$carat, 0.99)) +
ylim(0, quantile(diamonds$price, 0.99))
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point(fill = I('#F79420'), color = I('black'), shape = 21) +
xlim(0, quantile(diamonds$carat, 0.99)) +
ylim(0, quantile(diamonds$price, 0.99))
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point(fill = I('#F79420'),
color = I('black'),
shape = 21,
alpha = 1/4) +
scale_x_continuous(lim = c(0, quantile(diamonds$carat, 0.99))) +
scale_y_continuous(lim = c(0, quantile(diamonds$price, 0.99))) +
stat_smooth(method = 'lm')
# install these if necessary
install.packages('GGally')
install.packages('scales')
install.packages('memisc')
install.packages('lattice')
install.packages('MASS')
install.packages('car')
install.packages('reshape')
install.packages('plyr')
# load the ggplot graphics package and the others
library(ggplot2)
library(GGally)
library(scales)
library(memisc)
# sample 10,000 diamonds from the data set
set.seed(20022012)
diamond_samp <- diamonds[sample(1:length(diamonds$price), 10000), ]
ggpairs(diamond_samp, params = c(shape = I('.'), outlier.shape = I('.')))
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("scales")
View(diamond_samp)
ggpairs(diamond_samp, params = c(shape = I('.'), outlier.shape = I('.')))
ggpairs(diamond_samp,
lower = list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
library(GGally)
ggpairs(diamond_samp,
lower = list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
?diamonds
library(gridExtra)
plot1 <- qplot(x = price, data = diamonds) +
ggtitle('Price')
plot2 <- qplot(x = price, data = diamonds) +
scale_x_log10() +
ggtitle('Price (log10)')
grid.arrange()
library('ggplot2')
plot1 <- qplot(x = price, data = diamonds) +
ggtitle('Price')
plot2 <- qplot(x = price, data = diamonds) +
scale_x_log10() +
ggtitle('Price (log10)')
grid.arrange()
grid.arrange(plot1, plot2)
plot1 <- qplot(x = price,
data = diamonds,
binwidth = 100,
fill = I('#099DD09')) +
ggtitle('Price')
plot2 <- qplot(x = price,
data = diamonds,
binwidth = .01,
fill = I('#F79420')) +
scale_x_log10() +
ggtitle('Price (log10)')
grid.arrange(plot1, plot2, ncol = 2)
plot1 <- qplot(x = price,
data = diamonds,
binwidth = 100,
fill = I('#099DD9')) +
ggtitle('Price')
plot2 <- qplot(x = price,
data = diamonds,
binwidth = .01,
fill = I('#F79420')) +
scale_x_log10() +
ggtitle('Price (log10)')
grid.arrange(plot1, plot2, ncol = 2)
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point(fill = I('#F79420'),
color = I('black'),
shape = 21,
alpha = 1/4) +
scale_x_continuous(lim = c(0, quantile(diamonds$carat, 0.99))) +
scale_y_continuous(lim = c(0, quantile(diamonds$price, 0.99)),
trans = log10_trans()) +
stat_smooth(method = 'lm') +
ggtitle('Price (log10) by Carat')
library(scales)
install.packages('scales')
qplot(x = LoanStatus, data = pld_sub)
library(ggplot2)
qplot(x = LoanStatus, data = pld_sub)
pld_sub <- subset(pld, select = c(2:3, 5:10, 17:22, 26:27, 36:38, 41:43,
47:48, 60:65, 68))
pld <- read.csv("prosperLoanData.csv")
pld_sub <- subset(pld, select = c(2:3, 5:10, 17:22, 26:27, 36:38, 41:43,
47:48, 60:65, 68))
qplot(x = LoanStatus, data = pld_sub)
qplot(x = DelinquinciesLast7Years, data = pld_sub)
qplot(x = DelinquenciesLast7Years, data = pld_sub)
qplot(x = DelinquenciesLast7Years, data = pld_sub, binwidth = 1)
qplot(x = DelinquenciesLast7Years, data = pld_sub, binwidth = 1) +
xlim(1:50)
qplot(x = DelinquenciesLast7Years, data = pld_sub, binwidth = 1) +
xlim(1,50)
pld <- read.csv("prosperLoanData.csv")
pld_sub <- subset(pld, select = c(2:3, 5:10, 17:22, 26:27, 36:38, 41:43,
47:48, 60:65, 68))
qplot(x = CreditScoreRangeUpper, data = pld_sub)
library(ggplot2)
qplot(x = CreditScoreRangeUpper, data = pld_sub)
qplot(x = CreditScoreRangeUpper, data = pld_sub, xlim = c(475, 900))
qplot(x = CreditScoreRangeUpper,
data = pld_sub,
binwidth = 10,
xlim = c(475, 900))
qplot(x = CreditScoreRangeUpper,
data = pld_sub,
binwidth = 40,
xlim = c(475, 900))
qplot(x = CreditScoreRangeUpper,
data = pld_sub,
binwidth = 35,
xlim = c(475, 900))
qplot(x = CreditScoreRangeUpper,
data = pld_sub,
binwidth = 30,
xlim = c(475, 900))
qplot(x = CreditScoreRangeUpper,
data = pld_sub,
binwidth = 20,
xlim = c(475, 900))
qplot(x = CreditScoreRangeUpper,
data = pld_sub,
binwidth = 10,
xlim = c(475, 900))
qplot(x = CreditScoreRangeUpper,
data = pld_sub,
binwidth = 20,
xlim = c(475, 900))
qplot(x = CreditScoreRangeUpper,
data = pld_sub,
binwidth = 20,
xlim = c(475, 900),
breaks = seq(475, 900, 25))
qplot(x = CreditScoreRangeUpper,
data = pld_sub,
binwidth = 20,
scale_x_continuous(limits = c(475, 900),
breaks = seq(475, 900, 25)))
qplot(x = CreditScoreRangeUpper,
data = pld_sub,
binwidth = 20) +
scale_x_continuous(limits = c(475, 900),
breaks = seq(475, 900, 25))
set.seed(1973)
pld_samp <- pld_sub[sample(1:length(pld_sub$BorrowerRate), 10000), ]
ggpairs(pld_samp,
lower = list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
library(GGally)
set.seed(1973)
pld_samp <- pld_sub[sample(1:length(pld_sub$BorrowerRate), 10000), ]
ggpairs(pld_samp,
lower = list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
library(ggplot2)
library(GGally)
getwd()
setwd("C:/Users/tdickey/Documents/Udacity/DAND/EDA_project")
pld <- read.csv("prosperLoanData.csv")
pld_sub <- subset(pld, select = c(2:3, 5:10, 17:22, 26:27, 36:38, 41:43,
47:48, 60:65, 68))
set.seed(1973)
pld_samp <- pld_sub[sample(1:length(pld_sub$BorrowerRate), 10000), ]
ggpairs(pld_samp,
lower = list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
set.seed(201293)
pld_samp <- pld_sub[sample(1:length(pld_sub$BorrowerRate), 10000), ]
ggpairs(pld_samp,
lower = list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
set.seed(201293)
pld_samp <- pld_sub[sample(1:length(pld_sub$BorrowerRate), 10000), ]
pld_samp %>%
select(-ListingCreationDate) %>%
ggpairs(lower = list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
library(ggplot2)
library(GGally)
dim(pld_sub)
str(pld_sub)
summary(subset(pld_sub, select = c(3:4, 6:8, 10:27, 29, 31)))
qplot(BorrowerRate, data = pld_sub, binwidth = 0.01) +
scale_x_continuous(limits = c(0, 0.375),
breaks = seq(0, .375, .05))
qplot(BorrowerAPR, data = pld_sub, binwidth = 0.01) +
scale_x_continuous(limits = c(0, 0.45),
breaks = seq(0, .45, .05))
qplot(x = IncomeRange, data = pld_sub)
qplot(x = DebtToIncomeRatio, data = pld_sub, binwidth = .01) +
scale_x_continuous(limits = c(-0, 0.75), breaks = seq(-0, 0.75, .1))
qplot(x = LoanStatus, data = pld_sub)
qplot(x = DelinquenciesLast7Years, data = pld_sub, binwidth = 1) +
xlim(1,50)
qplot(x = CreditScoreRangeUpper,
data = pld_sub,
binwidth = 20) +
scale_x_continuous(limits = c(475, 900),
breaks = seq(475, 900, 25))
pld_samp %>%
select(-ListingCreationDate) %>%
ggpairs(lower = list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
pld_samp %>%
select(-ListingCreationDate) %>%
ggpairs()
library(dplyr)
pld_samp %>%
select(-ListingCreationDate) %>%
ggpairs()
pld_samp %>%
select(-ListingCreationDate, -ClosedDate, -BorrowerState, -Occupation, LoanOriginationDate) %>%
ggpairs(lower = list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
pld_samp %>%
select(-ListingCreationDate, -ClosedDate, -BorrowerState, -Occupation, -LoanOriginationDate) %>%
ggpairs(lower = list(continuous = wrap("points", shape = I('.'))),
upper = list(combo = wrap("box", outlier.shape = I('.'))))
View(pld)
?subset
